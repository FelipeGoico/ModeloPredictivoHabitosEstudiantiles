---
title: "Modelo Predictivo de hábitos estudiantiles y rendimiento académico"
format: pdf
editor: visual
---

# Modelo Predictivo de hábitos estudiantiles y rendimiento académico

## Descripción general del dataset

El dataset contiene **1000 registros de estudiantes**, cada uno con información sobre hábitos diarios, condiciones personales y rendimiento académico. En total, hay **16 variables**, tanto numéricas como categóricas. Estas variables incluyen aspectos como edad, género, horas de estudio, uso de redes sociales, calidad del sueño, ejercicio, salud mental y nota obtenida en el examen final.

\newpage

## Objetivos

### General

Desarrollar función que genere modelo de regresión lineal o generalizada capaz de estimar el rendimiento académico de los estudiantes, medido a través de la nota del examen final, en función de sus hábitos de estudio, estilo de vida y condiciones personales.

### Especificos

-   Explorar y analizar los datos disponibles sobre hábitos estudiantiles, bienestar y rendimiento académico.

-   Identificar las variables que tienen mayor correlación con el puntaje en el examen, como horas de estudio, sueño, uso de redes sociales, entre otras.

-   Preprocesar los datos para su uso en modelos predictivos (tratamiento de valores nulos, codificación de variables categóricas, normalización, etc.).λ

-   Interpretar los resultados del modelo para comprender la importancia relativa de cada hábito o variable en la predicción del rendimiento académico.

-   Desarrollar pruebas de la función creada con testhat

\newpage

## Importar dataset

```{r}
rendimiento_estudiantes_inmutable=read.csv("student_habits_performance.csv")
```

```{r , include=FALSE}
#Librerias
library(tidyverse) #analisis y manipúlación de datos
library(tidymodels) #modelado y analisis estadistico
library(GGally) #visualizaciones complejas
library(testthat) # pruebas unitarias de codigo
```

## Visualización del dataset

### Primeras 6 filas del dataset

```{r}
head(rendimiento_estudiantes_inmutable,5)
```

\newpage

### Variables del dataset

Variables numéricas continuas:

-   age – Edad del estudiante

-   study_hours_per_day – Horas de estudio por día

-   social_media_hours – Horas en redes sociales por día

-   netflix_hours – Horas viendo Netflix por día

-   attendance_percentage – Porcentaje de asistencia a clases

-   sleep_hours – Horas de sueño por día

-   exercise_frequency – Frecuencia de ejercicio (veces por semana)

-   mental_health_rating – Valoración del bienestar mental (escala 1 a 10)

-   exam_score – Puntaje en el examen final (0 a 100)

Variables categóricas:

-   student_id – ID único del estudiante (no se analiza, sirve para identificación)

-   gender – Género (Male, Female, Other)

-   part_time_job – Tiene trabajo de medio tiempo (Yes/No)

-   diet_quality – Calidad de la dieta (Poor, Fair, Good)

-   parental_education_level – Nivel educativo de los padres (por ejemplo: High School, Bachelor, etc.)

-   internet_quality – Calidad del internet (Poor, Average, Good)

-   extracurricular_participation – Participación en actividades extracurriculares (Yes/No)

\newpage

## Analisis exploratorio de datos

```{r}
summary(rendimiento_estudiantes_inmutable)
str(rendimiento_estudiantes_inmutable)
```

\newpage

## Uso de funciones creadas

Se preparan los datos utilizando la funcion 'preparacion_data' y se guardan en 'rendimiento_estudiantes_preparado'

```{r}

source("Funciones.R") #carga de funciones
rendimiento_estudiantes_preparado <- preparacion_data(rendimiento_estudiantes_inmutable)
head(rendimiento_estudiantes_preparado)
```

\newpage

Se utilizan los datos preparados en la funcion 'coeficientes_correlacion' y se imprimen los resultados

```{r}
corpearson <- coeficientes_correlacion(rendimiento_estudiantes_preparado,
                                       metodo = "pearson")
print(corpearson)
```

\newpage

Visualización dataset para el modelo.

```{r}
# Se extrae y se visualiza los datos para el modelo. 
data_modelo <- corpearson$data_modelo
head(data_modelo)
```

## Desarrollo de la función

```{r}
analiza_habitos_estudio <- function(data, 
                                    variable_objetivo = "exam_score", 
                                    variables_predictoras = c("study_hours_per_day",
                                                              "sleep_hours"), 
                                    modelo = "lm", 
                                    resumen = TRUE) {
  # Validaciones
  if (!is.data.frame(data)) 
    stop("El objeto ingresado no es un data.frame")
  if (!all(c(variable_objetivo, variables_predictoras) %in% colnames(data))) 
    stop("Variables no encontradas en el dataset")

  # Eliminar filas incompletas
  data <- data %>% drop_na(all_of(c(variable_objetivo, 
                                    variables_predictoras)))

  # Formula dinámica
  formula_str <- paste(variable_objetivo, 
                       "~", 
                       paste(variables_predictoras, 
                             collapse = " + "))
  fmla <- as.formula(formula_str)

  # Selección de modelo
  if (modelo == "lm") {
    fit <- lm(fmla, data = data)
  } else if (modelo == "glm") {
    fit <- glm(fmla, data = data)
  } else {
    stop("Modelo no soportado. Usa 'lm' o 'glm'.")
  }

  if (resumen) {
    return(summary(fit))
  } else {
    return(fit)
  }
}
```

## Aplicación de la función

### variables predictoras

```{r}
variables_predictoras <- corpearson$variables_predictoras
```

### Modelo con variables predictoras de data_modelo

```{r}
# Modelo con variables predictoras de data_modelo
analiza_habitos_estudio(data_modelo, 
                        variables_predictoras = variables_predictoras, 
                        resumen = T)
```

### Modelo con 2 variables predictoras (study_hours_per_day & sleep_hours)

```{r}
# Modelo con dos variables predictoras
analiza_habitos_estudio(data_modelo, 
                        variables_predictoras = c("study_hours_per_day", 
                                                  "sleep_hours"), 
                        resumen = T)
```

## Validación con testthat

```{r}


test_that("El input debe ser un data.frame", {
  expect_error(analiza_habitos_estudio("texto"))
})

test_that("Devuelve un modelo lm", {
  df <- data_modelo %>% select(exam_score, 
                               study_hours_per_day, 
                               sleep_hours) %>% drop_na()
  fit <- analiza_habitos_estudio(df, 
                                 resumen = FALSE)
  expect_s3_class(fit, "lm")
})

test_that("Lanza error si las variables no existen", {
  expect_error(analiza_habitos_estudio(df_test, 
                                       variables_predictoras = c("inexistente")))
})

test_that("Funciona correctamente con resumen", {
  resultado <- analiza_habitos_estudio(data_modelo)
  expect_type(resultado, "list")
})
```

## Conclusiones

La función desarrollada permite analizar rápidamente el impacto de distintas variables de hábito en el rendimiento académico. Se comprobó que variables como las horas de estudio y el sueño tienen una correlación directa con las calificaciones. La función es escalable, flexible y reutilizable para distintos conjuntos de datos.
